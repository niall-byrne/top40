{"version":3,"sources":["components/navbar/navbar.js","components/covers/tile.js","components/covers/covers.js","components/covers/top40.js","components/drawer/drawer.js","components/zoom/zoom.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","profile","this","props","attrs","user","className","href","rel","target","rating","email","React","Component","Tile","drawerImageSize","width","size","height","flipped","index","onClick","e","drawerHandler","style","alt","name","src","url","Covers","covers","albums","slice","start","end","class","map","album","key","image","Top40","Drawer","open","selected","image_large","artist","playcount","lastfm","openLastFM","Zoom","App","state","cleanAlbums","bind","loadData","toggleDrawer","closeDrawer","openDrawer","setState","setTimeout","window","forEach","albumIndex","flipAlbum","cleanedAlbums","newalbum","rank","push","console","log","fetch","then","response","json","data","lastElement","length","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"8WAIqBA,G,6KAEb,IAAMC,EAAU,4BAA8BC,KAAKC,MAAMC,MAAMC,KAE/D,OACI,yBAAKC,UAAU,kBACX,yBAAKA,UAAU,+BACX,uBAAGC,KAAMN,EAASO,IAAI,sBAAqBC,OAAO,UAC9C,kBAAC,IAAD,CAAUC,OAAO,IAAIC,MAAQT,KAAKC,MAAMC,MAAMO,UAGtD,yBAAKL,UAAU,+BAAgCJ,KAAKC,MAAMC,MAAMC,W,GAX5CO,IAAMC,YCFrBC,E,kDACjB,WAAYX,GAAQ,IAAD,8BACf,cAAMA,IACDY,gBAAkB,IAFR,E,qDAKT,IAAD,OACCC,EAAQd,KAAKC,MAAMc,KACnBC,EAAShB,KAAKC,MAAMc,KAE1B,OAAKf,KAAKC,MAAMgB,QAYR,yBAAKb,UAAW,cAAgBJ,KAAKC,MAAMiB,MAAOC,QAAS,SAACC,GAAD,OAAO,EAAKnB,MAAMoB,cAAcD,EAAG,EAAKnB,MAAMiB,MAAQ,KAC7G,yBAAKd,UAAU,SACX,yBAAKkB,MAAO,CAACR,MAAOA,EAAQ,EAAGE,OAAQA,EAAS,GAAIZ,UAAU,QACzDJ,KAAKC,MAAMiB,SAbxB,yBAAKd,UAAW,cAAgBJ,KAAKC,MAAMiB,MAAOC,QAAS,SAACC,GAAD,OAAO,EAAKnB,MAAMoB,cAAcD,EAAG,EAAKnB,MAAMiB,MAAQ,KAC7G,yBAAKd,UAAU,SACX,yBAAKA,UAAU,SACX,yBAAKkB,MAAO,CAACR,MAAOA,EAAOE,OAAQA,GAAUO,IAAKvB,KAAKC,MAAMuB,KAAMC,IAAKzB,KAAKC,MAAMyB,a,GAf7EhB,IAAMC,WCEnBgB,G,6KACP,IAAD,OACCC,EAAS5B,KAAKC,MAAM4B,OAAOC,MAAM9B,KAAKC,MAAM8B,MAAO/B,KAAKC,MAAM+B,KACpE,OACI,yBAAK5B,UAAW,WAAaJ,KAAKC,MAAMgC,OACnCL,EAAOM,KAAI,SAACC,EAAOjB,GAClB,OACE,yBAAKd,UAAU,eAAegC,IAAKlB,EAAQ,GACzC,kBAAC,EAAD,CAAMG,cAAe,kBAAM,EAAKpB,MAAMoB,cAAcH,IAAQM,KAAMW,EAAMX,KAAMT,KAAM,EAAKd,MAAMc,KAAMW,IAAKS,EAAME,MAAOpB,QAASkB,EAAMlB,QAASC,MAAOA,EAAQ,EAAGkB,IAAKlB,EAAQ,a,GARhKR,IAAMC,YCDrB2B,E,uKAEb,OACI,yBAAKlC,UAAU,iBACX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,oBACX,kBAAC,EAAD,CAAQiB,cAAerB,KAAKC,MAAMoB,cAAeY,MAAM,SAASF,MAAO,EAAGC,IAAK,GAAIjB,KAAMf,KAAKC,MAAMc,KAAMc,OAAQ7B,KAAKC,MAAM4B,gB,GANlHnB,IAAMC,WCApB4B,G,mLACP,IAAD,OAEL,OACI,yBAAKnC,UAAS,yBAAoBJ,KAAKC,MAAMuC,KAAO,OAAS,WACzD,yBAAKpC,UAAU,UACX,yBAAKkB,MAAO,CAACR,MAAOd,KAAKC,MAAMc,KAAK,EAAGC,OAAQhB,KAAKC,MAAMc,KAAK,GAAKQ,IAAKvB,KAAKC,MAAMuB,KAAMC,IAAKzB,KAAKC,MAAMwC,SAASC,eAEvH,yBAAKtC,UAAU,gBACVJ,KAAKC,MAAMwC,SAASjB,KACrB,yBAAKpB,UAAU,UAAUJ,KAAKC,MAAMwC,SAASE,OAAOnB,MACpD,yBAAKpB,UAAU,SAASJ,KAAKC,MAAMwC,SAASG,UAA5C,YACA,yBAAKxC,UAAS,iCAA4BJ,KAAKC,MAAM4C,OAAS,UAAY,KACtE,yBAAK1B,QAAS,kBAAM,EAAKlB,MAAM6C,WAAW,EAAK7C,MAAMwC,SAASf,MAAMJ,MAAO,CAACR,MAAO,GAAIE,OAAQ,IAAMO,IAAI,UAAUE,IAXvH,+B,GAFgBf,IAAMC,YCCrBoC,E,kDACjB,WAAY9C,GAAQ,IAAD,8BACf,cAAMA,IACDY,gBAAkB,IAFR,E,qDAMf,OACI,yBAAKT,UAAU,WACX,6BACI,yBAAKA,UAAW,4BACZ,kBAAC,EAAD,CAAQyC,OAAQ7C,KAAKC,MAAM4C,OAAQC,WAAY9C,KAAKC,MAAM6C,WAAY/B,KAAMf,KAAKa,gBAAiB4B,SAAUzC,KAAKC,MAAMwC,SAAUD,KAAMxC,KAAKC,MAAMuC,SAG1J,yBAAKpC,UAAU,gBACX,yBAAKA,UAAU,0BAAf,0B,GAfcM,IAAMC,WCEnBqC,E,kDACnB,WAAY/C,GAAQ,IAAD,8BACjB,cAAMA,IAEDgD,MAAQ,CACXpB,OAAQ,GACR1B,KAAM,GACNqC,MAAM,EACNK,QAAQ,EACRJ,SAAU,IAEZ,EAAKS,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,SAAW,EAAKA,SAASD,KAAd,gBAChB,EAAKE,aAAe,EAAKA,aAAaF,KAAlB,gBACpB,EAAKG,YAAc,EAAKA,YAAYH,KAAjB,gBACnB,EAAKI,WAAa,EAAKA,WAAWJ,KAAhB,gBAClB,EAAKL,WAAa,EAAKA,WAAWK,KAAhB,gBAfD,E,uDAkBRzB,GAAK,IAAD,OACb1B,KAAKwD,SAAS,CACZX,QAAQ,IAEVY,YAAW,kBAAM,EAAKD,SAAS,CAC7BX,QAAQ,MACN,KACJa,OAAOlB,KAAKd,EAAK,Y,gCAGTR,GACR,IAAIW,EAAS7B,KAAKiD,MAAMpB,OACxBA,EAAO8B,SAAQ,SAASxB,EAAOyB,GAE3BzB,EAAMlB,QADJ2C,IAAe1C,IACAiB,EAAMlB,WAK3BjB,KAAKwD,SAAS,CACZ3B,OAAQA,M,oCAKV7B,KAAKwD,SAAS,CACZhB,MAAM,M,iCAICtB,GACTlB,KAAKwD,SAAS,CACZf,SAAUzC,KAAKiD,MAAMpB,OAAOX,GAC5BsB,MAAOxC,KAAKiD,MAAMT,S,mCAITtB,GAAQ,IAAD,OAClBlB,KAAK6D,UAAU3C,IACS,IAApBlB,KAAKiD,MAAMT,MACbxC,KAAKsD,cACDtD,KAAKiD,MAAMR,WAAazC,KAAKiD,MAAMpB,OAAOX,IAC5CuC,YAAW,kBAAM,EAAKF,WAAWrC,KAAQ,MAG3ClB,KAAKuD,WAAWrC,K,kCAIRW,GACV,IAAIiC,EAAgB,GAapB,OAZAjC,EAAO8B,SAAQ,SAAAxB,GACb,IAAI4B,EAAW,GACfA,EAASpB,OAASR,EAAMQ,OACxBoB,EAASC,KAAO7B,EAAM,SAAN,KAChB4B,EAAS1B,MAAQF,EAAK,MAAU,GAAG,SACnC4B,EAASrB,YAAcP,EAAK,MAAU,GAAG,SACzC4B,EAASnB,UAAYT,EAAMS,UAC3BmB,EAASrC,IAAMS,EAAMT,IACrBqC,EAASvC,KAAOW,EAAMX,KACtBuC,EAAS9C,SAAU,EACnB6C,EAAcG,KAAKF,MAEdD,I,iCAGG,IAAD,OACTI,QAAQC,IAAI,6BACZC,MAAM,oBACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAACG,GACL,IAAMC,EAAcD,EAAK1C,OAAO,GAAG,GACnC,EAAK0B,SAAS,CACZ3B,OAAQ,EAAKqB,YAAYuB,EAAW,UAAX,OACzBtE,KAAMsE,EAAW,UAAc,SAC/BhC,SAAUgC,EAAW,UAAX,MAAkC,U,wCAKhCxB,GAChBjD,KAAKoD,WACLc,QAAQC,IAAI,mB,+BAGJ,IAAD,EACkBnE,KAAKiD,MAAtBpB,EADD,EACCA,OAAQ1B,EADT,EACSA,KAEhB,OAAI0B,EAAO6C,OAAS,EAEhB,yBAAKtE,UAAU,UACb,yBAAKA,UAAU,WACb,kBAAC,EAAD,CAAQF,MAAQC,IAChB,kBAAC,EAAD,CAAM0C,OAAQ7C,KAAKiD,MAAMJ,OAAQC,WAAY9C,KAAK8C,WAAYL,SAAUzC,KAAKiD,MAAMR,SAAUD,KAAMxC,KAAKiD,MAAMT,OAC9G,yBAAKpC,UAAU,mBAAf,gCAGA,yBAAKA,UAAU,sBACb,kBAAC,EAAD,CAAOiB,cAAerB,KAAKqD,aAActC,KAAM,IAAKc,OAAQA,OAM7D,wD,GA3HoBnB,IAAMC,WCMnBgE,QACW,cAA7BjB,OAAOkB,SAASC,UAEe,UAA7BnB,OAAOkB,SAASC,UAEhBnB,OAAOkB,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBhB,MAAK,SAAAiB,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLvB,QAAQuB,MAAMA,EAAMC,c","file":"static/js/main.7f7ff9a3.chunk.js","sourcesContent":["import React from 'react';\nimport Gravatar from 'react-gravatar';\nimport './navbar.scss';\n\nexport default class NavBar extends React.Component {\n    render() {\n        const profile = \"https://www.last.fm/user/\" + this.props.attrs.user\n\n        return (\n            <div className=\"section navbar\">\n                <div className=\"navbaritems section nav-one\">\n                    <a href={profile} rel=\"noopener noreferrer\"target=\"_blank\">\n                        <Gravatar rating=\"g\" email={ this.props.attrs.email }/>\n                    </a>\n                </div>\n                <div className=\"navbaritems section nav-two\">{ this.props.attrs.user }</div>\n            </div>\n        );\n    }\n}\n\n","import React from 'react';\n\nexport default class Tile extends React.Component {\n    constructor(props) {\n        super(props);\n        this.drawerImageSize = 220;\n    }\n\n    render() {\n        const width = this.props.size;\n        const height = this.props.size;\n        \n        if (!this.props.flipped) {\n            return (    \n                <div className={\"album album\" + this.props.index} onClick={(e) => this.props.drawerHandler(e, this.props.index - 1)}>\n                    <div className=\"flipp\">                    \n                        <div className=\"front\">\n                            <img style={{width: width, height: height }} alt={this.props.name} src={this.props.url}/>\n                        </div>                         \n                    </div>\n                </div>\n            );\n        } else {\n            return (    \n                <div className={\"album album\" + this.props.index} onClick={(e) => this.props.drawerHandler(e, this.props.index - 1)}>\n                    <div className=\"flipp\">                       \n                        <div style={{width: width + 6, height: height + 2}} className=\"back\">\n                            {this.props.index}\n                        </div> \n                    </div>\n                </div>\n            );\n        }\n        \n    }\n}\n","import React from 'react';\nimport Tile from './tile.js'\nimport './covers.scss';\n\nexport default class Covers extends React.Component {\n    render() {\n        const covers = this.props.albums.slice(this.props.start, this.props.end);\n        return (\n            <div className={\"section \" + this.props.class}>   \n                {covers.map((album, index) => {\n                  return (\n                    <div className=\"covers-album\" key={index + 1}>\n                      <Tile drawerHandler={() => this.props.drawerHandler(index)} name={album.name} size={this.props.size} url={album.image} flipped={album.flipped} index={index + 1} key={index + 1}/>\n                    </div>\n                  )\n                })}             \n            </div>\n        );\n    }\n}","import React from 'react';\nimport Covers from './covers.js';\n\nexport default class Top40 extends React.Component {\n    render() {        \n        return (\n            <div className=\"section top40\">                \n                <div className=\"center-covers\">\n                    <div className=\"covers-container\">\n                        <Covers drawerHandler={this.props.drawerHandler} class=\"covers\" start={0} end={40} size={this.props.size} albums={this.props.albums}/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport './drawer.scss';\n\nexport default class Drawer extends React.Component {\n    render() {\n        const image='./data/last.fm2.png';\n        return (\n            <div className={`section drawer ${this.props.open ? \"open\" : \"closed\"}`}>\n                <div className=\"zoomed\">\n                    <img style={{width: this.props.size-2, height: this.props.size-2 }} alt={this.props.name} src={this.props.selected.image_large}/>\n                </div>\n                <div className=\"section note\">\n                    {this.props.selected.name}\n                    <div className=\"artist\">{this.props.selected.artist.name}</div>\n                    <div className=\"plays\">{this.props.selected.playcount} listens</div>\n                    <div className={`section lastfmlink info${this.props.lastfm ? \" lastfm\" : \"\"}`}>\n                        <img onClick={() => this.props.openLastFM(this.props.selected.url)} style={{width: 50, height: 50 }} alt=\"last.fm\" src={image}/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n","import React from 'react';\nimport './zoom.scss';\nimport Drawer from '../drawer/drawer.js';\n\nexport default class Zoom extends React.Component {\n    constructor(props) {\n        super(props);\n        this.drawerImageSize = 220;\n      }\n\n    render() {\n        return (            \n            <div className=\"section\">                \n                <div>                    \n                    <div className={\"section closeupcontainer\"}>\n                        <Drawer lastfm={this.props.lastfm} openLastFM={this.props.openLastFM} size={this.drawerImageSize} selected={this.props.selected} open={this.props.open}/>\n                    </div>\n                </div>\n                <div className=\"section zoom\">      \n                    <div className=\"section titlecontainer\">\n                        My Top 40 Albums\n                    </div>\n                </div>                \n            </div>\n        );\n    }\n}","import React from 'react';\nimport './App.scss';\nimport NavBar from './components/navbar/navbar.js'\nimport Top40 from './components/covers/top40.js'\nimport Zoom from './components/zoom/zoom.js'\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      albums: [],\n      user: {},\n      open: false,\n      lastfm: false,\n      selected: {}\n    }\n    this.cleanAlbums = this.cleanAlbums.bind(this);\n    this.loadData = this.loadData.bind(this);\n    this.toggleDrawer = this.toggleDrawer.bind(this);\n    this.closeDrawer = this.closeDrawer.bind(this);\n    this.openDrawer = this.openDrawer.bind(this);\n    this.openLastFM = this.openLastFM.bind(this);\n  }\n\n  openLastFM(url){\n    this.setState({\n      lastfm: true,\n    });\n    setTimeout(() => this.setState({\n      lastfm: false,\n    }), 150);\n    window.open(url, \"_blank\")\n  }\n\n  flipAlbum(index) {\n    let albums = this.state.albums;\n    albums.forEach(function(album, albumIndex) {\n      if (albumIndex === index) {\n        album.flipped = !album.flipped\n      } else {\n        album.flipped = false;\n      }\n    });\n    this.setState({\n      albums: albums\n    })\n  }\n\n  closeDrawer() {\n    this.setState({\n      open: false,\n    });\n  }\n\n  openDrawer(index) {\n    this.setState({\n      selected: this.state.albums[index],\n      open: !this.state.open\n    });\n  }\n\n  toggleDrawer(index) {\n    this.flipAlbum(index);\n    if (this.state.open === true) {\n      this.closeDrawer(); \n      if (this.state.selected !== this.state.albums[index]) {\n        setTimeout(() => this.openDrawer(index), 150);\n      }\n    } else {\n      this.openDrawer(index)\n    }\n  }\n\n  cleanAlbums(albums) {\n    let cleanedAlbums = []\n    albums.forEach(album => {\n      let newalbum = {};\n      newalbum.artist = album.artist;\n      newalbum.rank = album['@attr'][\"rank\"];\n      newalbum.image = album['image'][2][\"#text\"];\n      newalbum.image_large = album['image'][3][\"#text\"];\n      newalbum.playcount = album.playcount;\n      newalbum.url = album.url;\n      newalbum.name = album.name;\n      newalbum.flipped = false;\n      cleanedAlbums.push(newalbum);\n    });\n    return cleanedAlbums \n  }\n\n  loadData() {\n    console.log(\"Loading: ./data/data.json\")    \n    fetch('./data/data.json')\n    .then(response => response.json())\n    .then((data) => {\n      const lastElement = data.slice(-1)[0]\n      this.setState({\n        albums: this.cleanAlbums(lastElement['topalbums']['album']),\n        user: lastElement['topalbums']['@attr'],\n        selected: lastElement['topalbums']['album'][0]\n      });\n    });\n  }\n\n  componentDidMount(state) {    \n    this.loadData();\n    console.log(\"State Loaded!\")    \n  }\n\n  render() {    \n    const { albums, user } = this.state;\n   \n    if (albums.length > 0) {      \n      return (      \n        <div className=\"parent\">\n          <div className=\"wrapper\">\n            <NavBar attrs={ user }/>\n            <Zoom lastfm={this.state.lastfm} openLastFM={this.openLastFM} selected={this.state.selected} open={this.state.open}/>\n            <div className=\"section details\">\n              Select an album for details.\n            </div>\n            <div className=\"section scrollable\">\n              <Top40 drawerHandler={this.toggleDrawer} size={100} albums={albums}/>\n            </div>            \n          </div>\n        </div>\n      );\n    } else {\n      return <div>Loading Please Wait</div>\n    }        \n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}