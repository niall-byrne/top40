{"version":3,"sources":["components/navbar/navbar.js","components/covers/tile.js","components/covers/covers.js","components/covers/top40.js","components/drawer/drawer.js","components/zoom/zoom.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","profile","this","props","attrs","user","className","href","rel","target","rating","email","React","Component","Tile","drawerImageSize","width","size","height","flipped","index","onClick","e","drawerHandler","style","alt","name","src","url","Covers","covers","albums","slice","start","end","class","map","album","key","image","Top40","Drawer","open","selected","image_large","artist","playcount","lastfm","openLastFM","process","Zoom","App","state","cleanAlbums","bind","loadData","toggleDrawer","closeDrawer","openDrawer","setState","setTimeout","window","forEach","albumIndex","flipAlbum","cleanedAlbums","newalbum","rank","push","console","log","fetch","headers","Accept","then","response","json","data","lastElement","length","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.be653162.chunk.js","sourcesContent":["import React from \"react\";\nimport Gravatar from \"react-gravatar\";\nimport \"./navbar.scss\";\n\nexport default class NavBar extends React.Component {\n  render() {\n    const profile = \"https://www.last.fm/user/\" + this.props.attrs.user;\n\n    return (\n      <div className=\"section navbar\">\n        <div className=\"navbaritems section nav-one\">\n          <a href={profile} rel=\"noopener noreferrer\" target=\"_blank\">\n            <Gravatar rating=\"g\" email={this.props.attrs.email} />\n          </a>\n        </div>\n        <div className=\"navbaritems section nav-two\">\n          {this.props.attrs.user}\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default class Tile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.drawerImageSize = 220;\n  }\n\n  render() {\n    const width = this.props.size;\n    const height = this.props.size;\n\n    if (!this.props.flipped) {\n      return (\n        <div\n          className={\"album album\" + this.props.index}\n          onClick={(e) => this.props.drawerHandler(e, this.props.index - 1)}\n        >\n          <div className=\"flipp\">\n            <div className=\"front\">\n              <img\n                style={{ width: width, height: height }}\n                alt={this.props.name}\n                src={this.props.url}\n              />\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div\n          className={\"album album\" + this.props.index}\n          onClick={(e) => this.props.drawerHandler(e, this.props.index - 1)}\n        >\n          <div className=\"flipp\">\n            <div\n              style={{ width: width + 6, height: height + 2 }}\n              className=\"back\"\n            >\n              {this.props.index}\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n","import React from \"react\";\nimport Tile from \"./tile.js\";\nimport \"./covers.scss\";\n\nexport default class Covers extends React.Component {\n  render() {\n    const covers = this.props.albums.slice(this.props.start, this.props.end);\n    return (\n      <div className={\"section \" + this.props.class}>\n        {covers.map((album, index) => {\n          return (\n            <div className=\"covers-album\" key={index + 1}>\n              <Tile\n                drawerHandler={() => this.props.drawerHandler(index)}\n                name={album.name}\n                size={this.props.size}\n                url={album.image}\n                flipped={album.flipped}\n                index={index + 1}\n                key={index + 1}\n              />\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Covers from \"./covers.js\";\n\nexport default class Top40 extends React.Component {\n  render() {\n    return (\n      <div className=\"section top40\">\n        <div className=\"center-covers\">\n          <div className=\"covers-container\">\n            <Covers\n              drawerHandler={this.props.drawerHandler}\n              class=\"covers\"\n              start={0}\n              end={40}\n              size={this.props.size}\n              albums={this.props.albums}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./drawer.scss\";\n\nexport default class Drawer extends React.Component {\n  render() {\n    const image = process.env.PUBLIC_URL + \"/data/last.fm.png\";\n    return (\n      <div className={`section drawer ${this.props.open ? \"open\" : \"closed\"}`}>\n        <div className=\"zoomed\">\n          <img\n            style={{ width: this.props.size - 2, height: this.props.size - 2 }}\n            alt={this.props.name}\n            src={this.props.selected.image_large}\n          />\n        </div>\n        <div className=\"section note\">\n          {this.props.selected.name}\n          <div className=\"artist\">{this.props.selected.artist.name}</div>\n          <div className=\"plays\">{this.props.selected.playcount} listens</div>\n          <div\n            className={`section lastfmlink info${\n              this.props.lastfm ? \" lastfm\" : \"\"\n            }`}\n          >\n            <img\n              onClick={() => this.props.openLastFM(this.props.selected.url)}\n              style={{ width: 50, height: 50 }}\n              alt=\"last.fm\"\n              src={image}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./zoom.scss\";\nimport Drawer from \"../drawer/drawer.js\";\n\nexport default class Zoom extends React.Component {\n  constructor(props) {\n    super(props);\n    this.drawerImageSize = 220;\n  }\n\n  render() {\n    return (\n      <div className=\"section\">\n        <div>\n          <div className={\"section closeupcontainer\"}>\n            <Drawer\n              lastfm={this.props.lastfm}\n              openLastFM={this.props.openLastFM}\n              size={this.drawerImageSize}\n              selected={this.props.selected}\n              open={this.props.open}\n            />\n          </div>\n        </div>\n        <div className=\"section zoom\">\n          <div className=\"section titlecontainer\">My Top 40 Albums</div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.scss\";\nimport NavBar from \"./components/navbar/navbar.js\";\nimport Top40 from \"./components/covers/top40.js\";\nimport Zoom from \"./components/zoom/zoom.js\";\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      albums: [],\n      user: {},\n      open: false,\n      lastfm: false,\n      selected: {},\n    };\n    this.cleanAlbums = this.cleanAlbums.bind(this);\n    this.loadData = this.loadData.bind(this);\n    this.toggleDrawer = this.toggleDrawer.bind(this);\n    this.closeDrawer = this.closeDrawer.bind(this);\n    this.openDrawer = this.openDrawer.bind(this);\n    this.openLastFM = this.openLastFM.bind(this);\n  }\n\n  openLastFM(url) {\n    this.setState({\n      lastfm: true,\n    });\n    setTimeout(\n      () =>\n        this.setState({\n          lastfm: false,\n        }),\n      150\n    );\n    window.open(url, \"_blank\");\n  }\n\n  flipAlbum(index) {\n    let albums = this.state.albums;\n    albums.forEach(function (album, albumIndex) {\n      if (albumIndex === index) {\n        album.flipped = !album.flipped;\n      } else {\n        album.flipped = false;\n      }\n    });\n    this.setState({\n      albums: albums,\n    });\n  }\n\n  closeDrawer() {\n    this.setState({\n      open: false,\n    });\n  }\n\n  openDrawer(index) {\n    this.setState({\n      selected: this.state.albums[index],\n      open: !this.state.open,\n    });\n  }\n\n  toggleDrawer(index) {\n    this.flipAlbum(index);\n    if (this.state.open === true) {\n      this.closeDrawer();\n      if (this.state.selected !== this.state.albums[index]) {\n        setTimeout(() => this.openDrawer(index), 150);\n      }\n    } else {\n      this.openDrawer(index);\n    }\n  }\n\n  cleanAlbums(albums) {\n    let cleanedAlbums = [];\n    albums.forEach((album) => {\n      let newalbum = {};\n      newalbum.artist = album.artist;\n      newalbum.rank = album[\"@attr\"][\"rank\"];\n      newalbum.image = album[\"image\"][2][\"#text\"];\n      newalbum.image_large = album[\"image\"][3][\"#text\"];\n      newalbum.playcount = album.playcount;\n      newalbum.url = album.url;\n      newalbum.name = album.name;\n      newalbum.flipped = false;\n      cleanedAlbums.push(newalbum);\n    });\n    return cleanedAlbums;\n  }\n\n  loadData() {\n    console.log(\"Loading: ./data/data.json\");\n    fetch(\"./data/data.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        const lastElement = data.slice(-1)[0];\n        this.setState({\n          albums: this.cleanAlbums(lastElement[\"topalbums\"][\"album\"]),\n          user: lastElement[\"topalbums\"][\"@attr\"],\n          selected: lastElement[\"topalbums\"][\"album\"][0],\n        });\n      });\n  }\n\n  componentDidMount(state) {\n    this.loadData();\n    console.log(\"State Loaded!\");\n  }\n\n  render() {\n    const { albums, user } = this.state;\n\n    if (albums.length > 0) {\n      return (\n        <div className=\"parent\">\n          <div className=\"wrapper\">\n            <NavBar attrs={user} />\n            <Zoom\n              lastfm={this.state.lastfm}\n              openLastFM={this.openLastFM}\n              selected={this.state.selected}\n              open={this.state.open}\n            />\n            <div className=\"section details\">Select an album for details.</div>\n            <div className=\"section scrollable\">\n              <Top40\n                drawerHandler={this.toggleDrawer}\n                size={100}\n                albums={albums}\n              />\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      return <div>Loading Please Wait</div>;\n    }\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}